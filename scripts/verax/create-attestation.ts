import { VeraxSdk } from "@verax-attestation-registry/verax-sdk";
import { ethers } from "hardhat";

// const myVeraxConfiguratin = {
//   chain: lineaSepolia,
//   mode: 'BACKEND', // no exported SDKMode
//   subgraphUrl: "https://api.studio.thegraph.com/query/67521/verax-v1-linea-sepolia/v0.0.1",
//   portalRegistryAddress: "0xe5b5CBABa557BFC18fC66c74dFaBAe65702e0d89",
//   moduleRegistryAddress: "0x9f677f957D15451784E83d33a341bad6f9D1C65D",
//   schemaRegistryAddress: "0x8a439d5FA9E8014808ff0A6D92903C0DaB1fB0A2",
//   attestationRegistryAddress: "0xf76d5add093023C4cFE72d0a2f1c81541B23d832",
// };
const publicAddress: `0x${string}`= `0x${process.env.SEPOLIA_PUB_ADDRESS}`;
const privateKey: `0x${string}` = `0x${process.env.SEPOLIA_PRIVATE_KEY}`;

// 0x7E8fdD0803BcC1A41cE432AdD07CA6C4E5F92eE2 - Empty portal address
// 0x12b756507B0eEd99cDaa1F66A2aA0E7904C61a94 - TestArr portal address
// 0x3d5FE35a0a09f25Abf1eb2560F6D3c60aB11E155 - ERC20SelectiveDisclosureVerifier portal address

async function main() {
  const veraxSdk = new VeraxSdk(VeraxSdk.DEFAULT_LINEA_SEPOLIA, publicAddress, privateKey);

  // const abiCoder = ethers.AbiCoder.defaultAbiCoder();
  // const encodedStruct = abiCoder.encode(
  //   ['uint64', 'uint256[]', 'uint256[2]', 'uint256[2][2]', 'uint256[2]'],
  //   [20000000,["21947821518962939314223753062600516493439826064799158636175370094818183170","6970106913944892530552700249775420621341287487534765926353279236456265255864","4487386332479489158003597844990487984925471813907462483907054425759564175341","533473131577915367476165056327875253276681460783582863497090277099337971105","7324279704276530468934624281016444667267090475638299627277301259037185954432","0","1","20000000","1431577103466539860889070794567000572122770392124","9879168730229456872604337288681695602254716535779031802650050292724434954684","25571237683927356215327292862834554260036362329602968527595654475912071170","4487386332479489158003597844990487984925471813907462483907054425759564175341","1716546415","1"],["5566335821639770948969011395405716127205787970847714294439548191780662246845","21820014235253014342321399313588367322033324491448325865818649779408202656610"],[["12870122324904285559850956281066811735477833774920640636931773375921633109664","946069213489297067328644090777463155196723099886623905975224229695689717734"],["1065158600041212067855179148138277052772055567696470394188312244035782309397","10237291963189911388883251020725094017303190606999878018556231085446393623407"]],["18889845494154296364722239210583031827437199030955471939444885330253899099679","9652173707176294295141561707960305896978582458911068602677630518372208444453"]]
  // );

  // const encodedSubject = abiCoder.encode(
  //   ['unit256'],
  //   ['21947821518962939314223753062600516493439826064799158636175370094818183170']
  // );

  // console.log(encodedStruct);
  // console.log('encodedSubject', encodedSubject);
  const tx = await veraxSdk.portal.attest(
    '0x7E8fdD0803BcC1A41cE432AdD07CA6C4E5F92eE2',
  {
    schemaId: '0x59a0acecb3a782c9035cb1d0e8d5661f6848ebcb4d44c212c891d0fbc06c081e',
    subject: '0x1', // user id bytes,
    expirationDate: 1747986521,
    attestationData: [{requestId: 20000000, nullifierSessionID: '7324279704276530468934624281016444667267090475638299627277301259037185954432'}]
  },
  [],
   true);
  console.log(tx);
}

main()
  .then(() => process.exit(0))
  .catch((error) => {
    console.error(error);
    process.exit(1);
  });
